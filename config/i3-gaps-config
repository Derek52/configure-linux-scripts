# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

#set windows key as mod button
set $mod Mod4
#alternatively use Mod1 to set Alt as the mod key
#set $mod Mod1

#default gap sizes. Setting these here as variables makes them easier to change throughout this file.
#desktop
set $outerGap 15
set $innerGap 10
#laptop
#set $outerGap 10
#set $innerGap 5

#turn on the gaps. This first line disables window borders which is a requirement
#You can change the border size to any number of pixels from 0 to whatever(idk if there is a max.)
for_window[class="^.*"] border pixel 3
gaps outer $outerGap
gaps inner $innerGap

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 9

set $term --no-startup-id st
#set $browser --no-startup-id /usr/local/waterfox/waterfox-bin
set $browser --no-startup-id firefox

#Composite manager:
exec --no-startup-id compton --xrender-sync-fence

#puts my monitors in the correct positions on my desktop
exec xrandr --output HDMI-1 --right-of DVI-I-1

#this line does the same, but on my laptop
#exec xrandr --output HDMI-1 --left-of LVDS-1

#unclutter hides the mouse after a brief period of time. I love this so much
exec --no-startup-id unclutter

#####Now we can start really configuring i3/i3-gaps#####

#randomly set my wallpaper
exec changeWallpaper

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

#i3's default is to have the mouse automatically focus windows when you hover the mouse over them.
#That annoyed the shit out of me.
focus_follows_mouse no

#when you change focus via key presses, the mouse cursor by default, will jump to the center of the newly focused window.
#I hate that too. This disables that.
mouse_warping none

#these letters are essentially mapped like arrow keys. It's faster than using the arrow keys.
#I switched the defaults for up and down. Pressing L for up felt weird.
set $up k
set $down l
set $left j
set $right semicolon

#this is the same thing, but with the vim key mapping. I prefer the i3 defaults
#using the same mapping for vim and i3 would be useful, but it's more convient to use the separate ones
#I press up and down in vim, a lot more than I press up and down in i3.
#set $up k
#set $down j
#set $left h
#set $right l


# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+q kill

#launch rofi
bindsym $mod+space exec rofi -show run -show-icons -sidebar-mode -terminal st
#use rofi to search youtube
bindsym $mod+Shift+space exec --no-startup-id echo "" | rofi -dmenu -p "youtube" | xargs -I{} st youtube-viewer --video-player=mpv {}

# start dmenu (a program launcher). The default program launcher. I use rofi instead.
#bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+Shift+backslash floating toggle

# change focus between tiling / floating windows
bindsym $mod+backslash focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent


#here I setup shortcuts to launched my most used software
bindsym $mod+y exec android-studio
bindsym $mod+Shift+y exec intellij

bindsym $mod+u exec pycharm
bindsym $mod+Shift+u exec inkscape

bindsym $mod+t exec gimp
bindsym $mod+Shift+t exec krita

bindsym $mod+g exec $browser
bindsym $mod+Shift+g exec $browser reddit.com

bindsym Print exec --no-startup-id scrot '%m-%d.png' -e 'mv $f ~/Pictures/screenshots/'
bindsym $mod+Print exec --no-startup-id scrot -u -e 'mv $f ~/Pictures/screenshots/'
#bindsym Print exec --no-startup-id scrot '%m-%d.png' -e 'mv $f ~/Pictures/screenshots'

#sets gaps back to my default amounts
bindsym $mod+question gaps outer current set $outerGap; gaps inner current set $innerGap
#turn gaps off
bindsym $mod+Shift+question gaps outer current set 0; gaps inner current set 0
#change outer gap size
bindsym $mod+less gaps outer current plus 5
bindsym $mod+Shift+less gaps outer current minus 5

#change inner gap size
bindsym $mod+greater gaps inner current plus 5
bindsym $mod+Shift+greater gaps inner current minus 5

#I like being able to look at my wallpaper. I use this setting for making my main window take up less screen space
bindsym $mod+m gaps outer current set 300
#this command is for 2 windows, still not using max screen space.
bindsym $mod+Shift+m gaps outer current set 140; gaps inner current set 50

#I use this setting for a 3-4 window workflow. I make the gaps tiny to use screen space, but I still like having a bit of gap.
bindsym $mod+n gaps outer current set 5; gaps inner current set 5; 

bindsym $mod+Home exec changeWallpaper
bindsym $mod+Shift+Home exec --no-startup-id echo "" | rofi -dmenu -p "wallpaper" | xargs -I{} changeWallpaper {}

# focus the child container
#bindsym $mod+d focus child


#create some workspace variables
#set $ws1 "1"
#set $ws2 "2"
#set $ws3 "3"
#set $ws4 "4"
#set $ws5 "5"
#set $ws6 "6"
#set $ws7 "7"
#set $ws8 "8"
#set $ws9 "9"
#set $ws10 "10"

#create some workspace variables
#set $ws0 "零"
set $ws1 "1:一"
set $ws2 "2:二"
set $ws3 "3:三"
set $ws4 "4:四"
set $ws5 "5:五"
set $ws6 "6:六"
set $ws7 "7:七"
set $ws8 "8:八"
set $ws9 "9:九"
set $ws10 "10:十"

workspace "1:一" output DVI-I-1
workspace "2:二" output DVI-I-1
workspace "3:三" output DVI-I-1
workspace "4:四" output DVI-I-1
workspace "5:五" output DVI-I-1
workspace "6:六" output HDMI-1
workspace "7:七" output HDMI-1
workspace "8:八" output HDMI-1
workspace "9:九" output HDMI-1
workspace "10:十" output HDMI-1

# switch to workspace
#bindsym $mod+grave workspace $ws0
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
#bindsym $mod+Shift+grave move container to workspace $ws0
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
#bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will grow the window’s width.
        # Pressing right will shrink the window’s width.
        # Pressing down will shrink the window’s height.
        # Pressing up will grow the window’s height.
	# These are inverted from the default settings, so they may trip you up.
	# I changed the default to 1 px to let me make finer adjustments. You can also use the mouse to get super precise.
        bindsym $left resize grow width 1 px or 1  ppt
        bindsym $right resize shrink width 1 px or 1 ppt
        bindsym $up resize grow height 1 px or 1 ppt
        bindsym $down resize shrink height 1 px or 1 ppt

        # Here the arrow keys do the same thing, with the default of 10px as a size modifier.
	# I set the arrow keys to 5px, (default was 10), but I don't really use these.
        bindsym Left resize grow width 5 px or 5 ppt
        bindsym Right resize shrink width 5 px or 5 ppt
        bindsym Up resize grow height 5 px or 5 ppt
        bindsym Down resize shrink height 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Theme colors
#class                   border  backgr. text    indic.   child_border
   client.focused          #FF0000 #FF0000 #80FFF9 #FDF6E3
   #client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
   #client.unfocused        #2F3D44 #FF0000 #1ABC9C #454948
   #client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
   #client.placeholder      #000000 #0c0c0c #ffffff #000000 

   #client.background       #2B2C2B
             

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
        tray_output primary
	strip_workspace_numbers yes
}
