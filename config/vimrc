
"Setting up Vundle, to manage vim plugins. This was mostly copied from Vundle's github page.
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

"let Vundle manage Vundle
Plugin 'VundleVim/Vundle.vim'

"adds syntax highlighting for Kotlin
Plugin 'udalov/kotlin-vim'


Plugin 'tpope/vim-rails'


Plugin 'othree/html5.vim'

"adds emmet to vim. Super useful for writing html code
Plugin 'mattn/emmet-vim'

"adds a toggleable filetree. This is basically needed.
Plugin 'scrooloose/nerdtree'

"color previews
Plugin 'gko/vim-coloresque'

"all plugins must be added before this line
call vundle#end()
filetype plugin indent on
"done setting up vundle


"These are simply config choices I like.

"show line numbers
set number 

"automatically match indentation of the previous line, when making a new one.
set autoindent

" Return to last edit position when opening files (You want this!) I stole this from some github page. Idk how it works.
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif


"turn backups off, your code should be saved by Git or some inferior version control system.
set nobackup
set nowb
set noswapfile

syntax on
try
	"colorscheme dracula
	"colorscheme plumber-dark
	colorscheme monokai
	"colorscheme sierra
catch
endtry

"Sets vim to split to the right or below. Vim's defaults are just unnatural.
set splitbelow
set splitright

"Ctrl+\ will open/close the filetree
map <C-\> :NERDTreeToggle <CR>
"automatically open the file tree, if you open vim without specifiying a file.
"Meaning you cd into your desired directory, and then launch vim, by just typing "vim"
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

"alternatively just automatically open the file tree whenever vim is opened
"autocmd vimenter * NERDTree

"close vim if the filetree is the only window left open
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

"Key Maps"
"inserts a hash rocket. Useful for ruby devs
imap <c-l> <space>=><space>
"maps a ruby html tag, for .html.erb files. Useful for rails devs
imap <c-a> <%=<space><space><space>%>

"Mulipurpose tab key
function! InsertTabWrapper()
	let col = col('.') - 1
	if !col || getline('.')[col - 1] !~ '\k'
		return "\<tab>"
	else
		return "\<c-p>"
	endif
endfunction

inoremap <tab> <c-r>=InsertTabWrapper()<cr>
inoremap <s-tab> <c-n>
